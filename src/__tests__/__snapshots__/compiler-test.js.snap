// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compile() empty rulesets 1`] = `
Object {
  "id": "<HASH>",
  "rules": Array [],
  "spec": Object {
    "base": Object {},
  },
  "variantToClassName": Object {},
}
`;

exports[`compile() empty values 1`] = `
Object {
  "id": "<HASH>",
  "rules": Array [],
  "spec": Object {
    "base": Object {
      "color": null,
    },
  },
  "variantToClassName": Object {},
}
`;

exports[`compile() empty values 2`] = `
Object {
  "id": "<HASH>",
  "rules": Array [],
  "spec": Object {
    "base": Object {
      "color": undefined,
    },
  },
  "variantToClassName": Object {},
}
`;

exports[`compile() empty values 3`] = `
Object {
  "id": "<HASH>",
  "rules": Array [],
  "spec": Object {
    "base": Object {
      "color": "",
    },
  },
  "variantToClassName": Object {},
}
`;

exports[`compile() empty values 4`] = `
Object {
  "id": "<HASH>",
  "rules": Array [],
  "spec": Object {
    "base": Object {
      "color": false,
    },
  },
  "variantToClassName": Object {},
}
`;

exports[`compile() marginStart/marginEnd 1`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Component-<HASH> { margin-left: 12px; }",
    },
    Object {
      "cssText": ".Component-<HASH>.RTL { margin-right: 12px; }",
    },
  ],
  "spec": Object {
    "base": Object {
      "marginStart": 12,
    },
  },
  "variantToClassName": Object {
    "base": Object {
      "className": "Component-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "margin-left: 12px",
          ],
          "selector": "base",
        },
        Object {
          "props": Array [
            "margin-right: 12px",
          ],
          "selector": "base",
        },
      ],
    },
  },
}
`;

exports[`compile() marginStart/marginEnd 2`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Component-<HASH> { margin-right: 12px; }",
    },
    Object {
      "cssText": ".Component-<HASH>.RTL { margin-left: 12px; }",
    },
  ],
  "spec": Object {
    "base": Object {
      "marginEnd": 12,
    },
  },
  "variantToClassName": Object {
    "base": Object {
      "className": "Component-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "margin-right: 12px",
          ],
          "selector": "base",
        },
        Object {
          "props": Array [
            "margin-left: 12px",
          ],
          "selector": "base",
        },
      ],
    },
  },
}
`;

exports[`compile() marginVertical/marginHorizontal 1`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Component-<HASH> { margin-top: 12px;
margin-bottom: 12px; }",
    },
  ],
  "spec": Object {
    "base": Object {
      "marginVertical": 12,
    },
  },
  "variantToClassName": Object {
    "base": Object {
      "className": "Component-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "margin-top: 12px",
            "margin-bottom: 12px",
          ],
          "selector": "base",
        },
      ],
    },
  },
}
`;

exports[`compile() marginVertical/marginHorizontal 2`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Component-<HASH> { margin-left: 12px;
margin-right: 12px; }",
    },
  ],
  "spec": Object {
    "base": Object {
      "marginHorizontal": 12,
    },
  },
  "variantToClassName": Object {
    "base": Object {
      "className": "Component-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "margin-left: 12px",
            "margin-right: 12px",
          ],
          "selector": "base",
        },
      ],
    },
  },
}
`;

exports[`compile() paddingStart/paddingEnd 1`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Component-<HASH> { padding-left: 12px; }",
    },
    Object {
      "cssText": ".Component-<HASH>.RTL { padding-right: 12px; }",
    },
  ],
  "spec": Object {
    "base": Object {
      "paddingStart": 12,
    },
  },
  "variantToClassName": Object {
    "base": Object {
      "className": "Component-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "padding-left: 12px",
          ],
          "selector": "base",
        },
        Object {
          "props": Array [
            "padding-right: 12px",
          ],
          "selector": "base",
        },
      ],
    },
  },
}
`;

exports[`compile() paddingStart/paddingEnd 2`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Component-<HASH> { padding-right: 12px; }",
    },
    Object {
      "cssText": ".Component-<HASH>.RTL { padding-left: 12px; }",
    },
  ],
  "spec": Object {
    "base": Object {
      "paddingEnd": 12,
    },
  },
  "variantToClassName": Object {
    "base": Object {
      "className": "Component-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "padding-right: 12px",
          ],
          "selector": "base",
        },
        Object {
          "props": Array [
            "padding-left: 12px",
          ],
          "selector": "base",
        },
      ],
    },
  },
}
`;

exports[`compile() paddingVertical/paddingHorizontal 1`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Component-<HASH> { padding-top: 12px;
padding-bottom: 12px; }",
    },
  ],
  "spec": Object {
    "base": Object {
      "paddingVertical": 12,
    },
  },
  "variantToClassName": Object {
    "base": Object {
      "className": "Component-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "padding-top: 12px",
            "padding-bottom: 12px",
          ],
          "selector": "base",
        },
      ],
    },
  },
}
`;

exports[`compile() paddingVertical/paddingHorizontal 2`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Component-<HASH> { padding-left: 12px;
padding-right: 12px; }",
    },
  ],
  "spec": Object {
    "base": Object {
      "paddingHorizontal": 12,
    },
  },
  "variantToClassName": Object {
    "base": Object {
      "className": "Component-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "padding-left: 12px",
            "padding-right: 12px",
          ],
          "selector": "base",
        },
      ],
    },
  },
}
`;

exports[`compile() startOffset/endOffset 1`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Component-<HASH> { left: 12px; }",
    },
    Object {
      "cssText": ".Component-<HASH>.RTL { right: 12px; }",
    },
  ],
  "spec": Object {
    "base": Object {
      "startOffset": 12,
    },
  },
  "variantToClassName": Object {
    "base": Object {
      "className": "Component-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "left: 12px",
          ],
          "selector": "base",
        },
        Object {
          "props": Array [
            "right: 12px",
          ],
          "selector": "base",
        },
      ],
    },
  },
}
`;

exports[`compile() startOffset/endOffset 2`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Component-<HASH> { right: 12px; }",
    },
    Object {
      "cssText": ".Component-<HASH>.RTL { left: 12px; }",
    },
  ],
  "spec": Object {
    "base": Object {
      "endOffset": 12,
    },
  },
  "variantToClassName": Object {
    "base": Object {
      "className": "Component-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "right: 12px",
          ],
          "selector": "base",
        },
        Object {
          "props": Array [
            "left: 12px",
          ],
          "selector": "base",
        },
      ],
    },
  },
}
`;

exports[`compile() variants 1`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Component-<HASH> { color: red; }",
    },
  ],
  "spec": Object {
    "base": Object {
      "color": "red",
    },
  },
  "variantToClassName": Object {
    "base": Object {
      "className": "Component-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "color: red",
          ],
          "selector": "base",
        },
      ],
    },
  },
}
`;

exports[`compile() variants 2`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Component-something-<HASH> { color: red; }",
    },
  ],
  "spec": Object {
    "something": Object {
      "color": "red",
    },
  },
  "variantToClassName": Object {
    "something": Object {
      "className": "Component-something-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "color: red",
          ],
          "selector": "something",
        },
      ],
    },
  },
}
`;

exports[`compile() w/ custom displayName 1`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Fancy-<HASH> { color: red; }",
    },
    Object {
      "cssText": ".Fancy-some-<HASH> { color: yellow; }",
    },
  ],
  "spec": Object {
    "base": Object {
      "color": "red",
    },
    "displayName": "Fancy",
    "some": Object {
      "color": "yellow",
    },
  },
  "variantToClassName": Object {
    "base": Object {
      "className": "Fancy-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "color: red",
          ],
          "selector": "base",
        },
      ],
    },
    "some": Object {
      "className": "Fancy-some-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "color: yellow",
          ],
          "selector": "some",
        },
      ],
    },
  },
}
`;

exports[`compile() w/ pseudoclasses 1`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Component-<HASH> { color: red; }",
    },
    Object {
      "cssText": ".Component-<HASH>:hover { color: black; }",
    },
  ],
  "spec": Object {
    "base": Object {
      "color": "red",
      "hover": Object {
        "color": "black",
      },
    },
  },
  "variantToClassName": Object {
    "base": Object {
      "className": "Component-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "color: red",
          ],
          "selector": "base",
        },
        Object {
          "props": Array [
            "color: black",
          ],
          "selector": "base:hover",
        },
      ],
    },
  },
}
`;

exports[`compile() w/ pseudoclasses 2`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Component-<HASH> { color: red; }",
    },
    Object {
      "cssText": ".Component-<HASH>:hover { color: black; }",
    },
    Object {
      "cssText": ".Component-<HASH>:hover:focus { color: yellow; }",
    },
  ],
  "spec": Object {
    "base": Object {
      "color": "red",
      "hover": Object {
        "color": "black",
        "focus": Object {
          "color": "yellow",
        },
      },
    },
  },
  "variantToClassName": Object {
    "base": Object {
      "className": "Component-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "color: red",
          ],
          "selector": "base",
        },
        Object {
          "props": Array [
            "color: black",
          ],
          "selector": "base:hover",
        },
        Object {
          "props": Array [
            "color: yellow",
          ],
          "selector": "base:hover:focus",
        },
      ],
    },
  },
}
`;

exports[`compile() w/ pseudoclasses 3`] = `
Object {
  "id": "<HASH>",
  "rules": Array [
    Object {
      "cssText": ".Component-something-<HASH> { color: red; }",
    },
    Object {
      "cssText": ".Component-something-<HASH>:hover { color: black; }",
    },
  ],
  "spec": Object {
    "something": Object {
      "color": "red",
      "hover": Object {
        "color": "black",
      },
    },
  },
  "variantToClassName": Object {
    "something": Object {
      "className": "Component-something-<HASH>",
      "repr": Array [
        Object {
          "props": Array [
            "color: red",
          ],
          "selector": "something",
        },
        Object {
          "props": Array [
            "color: black",
          ],
          "selector": "something:hover",
        },
      ],
    },
  },
}
`;
